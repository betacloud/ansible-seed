---
version: '3'
services:
  osism-ansible:
    restart: unless-stopped
    image: "{{ osism_ansible_image }}"
{% if ara_enable %}
    env_file:
      - "{{ manager_configuration_directory }}/ara.env"
{% endif %}
    command: sleep infinity
    volumes:
      - "/etc/hosts:/etc/hosts:ro"
      - "cache:{{ cache_directory }}"
      - "logs:{{ logs_directory }}"
      - "share:/share"
      - "{{ archive_directory }}:/archive:rw"
      - "{{ configuration_directory }}:/opt/configuration:ro"
      - "{{ secrets_directory }}:/ansible/secrets:ro"
    depends_on:
{% if redis_enable %}
      - cache
{% endif %}
{% if ara_server_enable %}
      - ara-server
{% endif %}
{% if ceph_ansible_enable %}
  ceph-ansible:
    restart: unless-stopped
    image: "{{ ceph_ansible_image }}"
{% if ara_enable %}
    env_file:
      - "{{ manager_configuration_directory }}/ara.env"
{% endif %}
    command: sleep infinity
    volumes:
      - "/etc/hosts:/etc/hosts:ro"
      - "cache:{{ cache_directory }}"
      - "logs:{{ logs_directory }}"
      - "share:/share"
      - "{{ configuration_directory }}:/opt/configuration:ro"
      - "{{ secrets_directory }}:/ansible/secrets:ro"
    depends_on:
{% if redis_enable %}
      - cache
{% endif %}
{% if ara_server_enable %}
      - ara-server
{% endif %}
{% endif %}
{% if kolla_ansible_enable %}
  kolla-ansible:
    restart: unless-stopped
    image: "{{ kolla_ansible_image }}"
{% if ara_enable %}
    env_file:
      - "{{ manager_configuration_directory }}/ara.env"
{% endif %}
    command: sleep infinity
    volumes:
      - "/etc/hosts:/etc/hosts:ro"
      - "cache:{{ cache_directory }}"
      - "logs:{{ logs_directory }}"
      - "share:/share"
      - "{{ configuration_directory }}:/opt/configuration:ro"
      - "{{ secrets_directory }}:/ansible/secrets:ro"
    depends_on:
{% if redis_enable %}
      - cache
{% endif %}
{% if ara_server_enable %}
      - ara-server
{% endif %}
{% endif %}
{% if redis_enable %}
  cache:
    restart: unless-stopped
    image: "{{ redis_image }}"
    command: redis-server --appendonly yes
    volumes:
      - "redis:/data"
    healthcheck:
      test: redis-cli ping
{% endif %}
{% if ara_server_enable %}
  ara-server:
    restart: unless-stopped
    image: "{{ ara_server_image }}"
    env_file:
      - "{{ manager_configuration_directory }}/ara-server.env"
      - "{{ manager_configuration_directory }}/ara.env"
    volumes:
      - "/etc/hosts:/etc/hosts:ro"
    ports:
      - "{{ ara_server_host }}:{{ ara_server_port }}:8000"
{% if mariadb_enable %}
    depends_on:
      - database
{% endif %}
    healthcheck:
      test: curl --silent --fail http://localhost:8000
{% if mariadb_enable %}
  database:
    restart: unless-stopped
    image: "{{ mariadb_image }}"
    env_file:
      - "{{ manager_configuration_directory }}/database.env"
    volumes:
      - "mariadb:/var/lib/mysql"
    healthcheck:
      test: mysqladmin status -h localhost -u $$MYSQL_USER -p$$MYSQL_PASSWORD || exit 1
{% endif %}
{% endif %}
volumes:
  cache:
  logs:
{% if ara_server_enable %}
  mariadb:
{% endif %}
{% if redis_enable %}
  redis:
{% endif %}
  share:

networks:
 default:
   driver: bridge
   ipam:
     driver: default
     config:
       - subnet:  {{ manager_network }}
